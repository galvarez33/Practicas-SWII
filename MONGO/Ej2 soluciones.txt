1.En sample_training.companies, ¿cuántas empresas tienen más empleados que el año en el que se fundaron? (sol. 324)

    db.companies.find({ $expr: { $gt: [ "$number_of_employees", "$founded_year" ] } }).count()



2.En sample_training.companies, ¿en cuántas empresas coinciden su permalinkcon su twitter_username? (sol. 1299)

    db.companies.find({ $expr: { $eq: [ "$twitter_username", "$permalink" ] } }).count()

3.En sample_airbnb.listingsAndReviews, ¿cuál es el nombre del alojamiento en el que pueden estar más de 6 personas alojadas y tiene exactamente 50 reviews? (sol. SunsetBeach LodgeRetreat)



Sample_Airbnb> db.listingAndReviews.find({     accommodates: { $gt: 6 },   reviews: { $size: 50 } }, { name: 1, _id: 0 })

4. En sample_airbnb.listingsAndReviews,¿cuántos documentos tienen el "property_type""House"e incluyen "Changingtable"como una de las "amenities"? (sol. 11)

db.listingAndReviews.find({property_type:House , amenities: "Changing table"}).count()



5. En sample_training.companies, ¿Cuántas empresas tienen oficinas en Seattle? (sol. 117)

     db.companies.find({offices:{$elemMatch:{city:"Seattle"}}}).count()
     db.companies.find({"offices.city":"Seattle"}).count()

6. En sample_training.companies, haga una query que devuelva únicamente el nombre de las empresas que tengan exactamente 8 "funding_rounds"

    db.companies.find({funding_rounds:{$size: 8}},{name:1, _id:0})

7. En sample_training.trips, ¿cuántos viajes empiezan en estaciones que están al oeste de la longitud -74? (sol. 1928)
Nota 1: Hacia el oeste la longitud decrece
Nota 2: el formato es <field_name>: [ <longitud>, <latitud> ]

    db.tips.find({"start station location.coordinates.0":{$lt:-74}}.count()})


8. En sample_training.inspections, ¿cuántas inspecciones se llevaron a cabo en la ciudad de "NEW YORK"? (sol. 18279)

    db.inspections.find({"address.city": "NEW YORK"}).count()

9.En sample_airbnb.listingsAndReviews, haga una query que devuelva el nombre y la dirección de los alojamientos que tengan "Internet"como primer elemento de "amenities"

    db.listingAndReviews.find({"amenities.0": "Internet"},{name:1,address:1,_id:0})